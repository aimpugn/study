package design_and_philosophy

// Go 언어의 컴파일러 디자인은
// 1. 빠른 컴파일 시간과
// 2. 실행 효율성을 강조

// Go의 패키지 시스템은 종속성을 최소화하며, 각 패키지는 컴파일될 때 필요한 최소한의 종속성만 포함 -> 전체 프로그램의 컴파일 시간을 단축
import "fmt"

func Simple() {
	// Go는 간결함과 효율성을 중시하는 언어

	// 1. 단순화된 변수 초기화
	var x int = 10 // 전통적인 변수 선언
	y := 20        // 짧은 선언을 사용한 변수 초기화

	// 2. 단순화된 구문과 타입 시스템
	// - `if(condition){}` 아닌 `if condition {}`으로 항상 중괄호를 사용해야 하며, 파서의 복잡성을 줄인다.
	// - `while` 루프는 존재하지 않고 `for`만 사용
	//
	// 이를 통해 파싱을 단순화 -> 컴파일러가 더 빨리 코드를 분석하도록 돕는다.
	if x > 0 {
		fmt.Println("x is positive")
	}

	fmt.Println(x, y)
}
